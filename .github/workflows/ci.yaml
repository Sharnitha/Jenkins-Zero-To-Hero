name: CI from GitHub
 
on:
  push:
    branches:
      - main
 
jobs:
  maven-build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # - name: Set up JDK
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: '11'
 
      - name: Build with Maven
        run: |
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        env:
          CI_PIPELINE_ID: ${{ github.run_id }}
 
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot-web
          path: java-maven-sonar-argocd-helm-k8s/spring-boot-app/target/spring-boot-web.jar
 
#   sonar-test:
#     runs-on: ubuntu-latest
#     needs: maven-build
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
      
#       - name: Setup JDK
#         uses: actions/setup-java@v2
#         with:
#           java-version: '11'
 
#       - name: Test with Sonarqube
# run: mvn sonar:sonar -Dsonar.host.url=http://1.2.3.4:9000/ -Dsonar.login=7ad9cddf8751a7868ff5d
 
#   deploy-stag:
#     runs-on: ubuntu-latest
#     needs: maven-build
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
 
#       - name: Build Docker image
#         run: |
#           docker build -t github-demo:${{ github.run_id }} .
#           echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#           docker push github-demo:${{ github.run_id }}
 
#   update-deployment:
#     runs-on: ubuntu-latest
#     needs: deploy-stag
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
      
#       - name: Install jq
#         run: sudo apt-get install jq
 
#       - name: Update Deployment File
#         run: |
#           ENCODED_PASSWORD=$(echo "${{ secrets.GITLAB_PASSWORD }}" | jq -s -R -r @uri)
#           REPO_URL="https://${{ secrets.GITLAB_USERNAME }}:${ENCODED_PASSWORD}@github.com/sharnitha1/Jro-To-Hero"
#           sed -i "s/image: demodock\/gitlab-demo:\([0-9]*\)/image: demodock\/gitlab-demo:${{ github.run_id }}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
#           git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
# git config --global user.name "demo"
# git config --global user.email "demo123@gmail.com"
#           git commit -m "Update deployment image to version ${{ github.run_id }}"
#           git push $REPO_URL HEAD:feature
