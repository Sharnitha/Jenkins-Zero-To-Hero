name: CI from GitHub
 
on:
  workflow_dispatch:
  # push:
  #   branches:
  #   - main
 
jobs:
  JavaMavenInstall:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'
          
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
         maven-version: 3.9.6
              
  # maven-build:
  Javaversion:
    needs: JavaMavenInstall
    runs-on: self-hosted
    steps:
      - name: javaversion
        run: |
          java --version
          mvn --version
          
  #     # - name: Checkout code
  #     #   uses: actions/checkout@v4
  #     # - name: Set up JDK
  #     #   uses: actions/setup-java@v4
  #     #   with:
  #     #     java-version: '11'
  #     #     distribution: 'adopt'
  #     #     # cache: 'maven'

  #     # - name: Set up Maven
  #     #   uses: stCarolas/setup-maven@v5
  #     #   with:
  #     #    maven-version: 3.9.6

  #     - name: Build with Maven
  #       run: |
  #         cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
  #         mvn clean package
 
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: spring-boot-web
  #         path: java-maven-sonar-argocd-helm-k8s/spring-boot-app/target/spring-boot-web.jar
          
  # # sonarcloud:
  # #   needs: maven-build
  # #   runs-on: self-hosted
  # #   steps:
  # #   - name: Sonarqube_report_push
  # #     run: mvn sonar:sonar -Dsonar.host.url=http://172.190.116.64:9000/ -Dsonar.login=ce70c3c87d57c5246ca1325bc0ccaa1a8a9d85c8
 
  # sonar-test:
  #   runs-on: self-hosted
  #   needs: [JavaMavenInstall, maven-build]
  #   steps:
  #     - name: Test with Sonarqube
  #       run: |
  #         cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
  #         mvn sonar:sonar -Dsonar.host.url=http://172.190.116.64:9000/ -Dsonar.login=ce70c3c87d57c5246ca1325bc0ccaa1a8a9d85c8
          
      # - name: Checkout code
      #   uses: actions/checkout@v4
      
      # - name: Set up JDK
      #   uses: actions/setup-java@v4
      #   with:
      #     java-version: '11'
      #     distribution: 'adopt'

      # - name: Set up Maven
      #   uses: stCarolas/setup-maven@v5
      #   with:
      #    maven-version: 3.9.6
      
#   deploy-stag:
#     runs-on: ubuntu-latest
#     needs: maven-build
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
 
#       - name: Build Docker image
#         run: |
#           docker build -t github-demo:${{ github.run_id }} .
#           echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#           docker push github-demo:${{ github.run_id }}
 
#   update-deployment:
#     runs-on: ubuntu-latest
#     needs: deploy-stag
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
      
#       - name: Install jq
#         run: sudo apt-get install jq
 
#       - name: Update Deployment File
#         run: |
#           ENCODED_PASSWORD=$(echo "${{ secrets.GITLAB_PASSWORD }}" | jq -s -R -r @uri)
#           REPO_URL="https://${{ secrets.GITLAB_USERNAME }}:${ENCODED_PASSWORD}@github.com/sharnitha1/Jro-To-Hero"
#           sed -i "s/image: demodock\/gitlab-demo:\([0-9]*\)/image: demodock\/gitlab-demo:${{ github.run_id }}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
#           git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
# git config --global user.name "demo"
# git config --global user.email "demo123@gmail.com"
#           git commit -m "Update deployment image to version ${{ github.run_id }}"
#           git push $REPO_URL HEAD:feature
